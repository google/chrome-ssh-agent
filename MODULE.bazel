module(
    name = "chrome_ssh_agent",
)

bazel_dep(name = "rules_go", version = "0.44.2")
bazel_dep(name = "gazelle", version = "0.35.0")
bazel_dep(name = "rules_nodejs", version = "6.0.3")
bazel_dep(name = "aspect_rules_js", version = "1.35.0")
bazel_dep(name = "aspect_rules_ts", version = "2.1.0")
bazel_dep(name = "aspect_rules_esbuild", version = "0.18.0")
bazel_dep(name = "bazel_skylib", version = "1.5.0")
bazel_dep(name = "rules_pkg", version = "0.9.1")
bazel_dep(name = "rules_proto", version = "6.0.0-rc1")

# Explicitly manage Go version.
go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(
    name = "go_sdk",
    # Use semver-coerced to handle versions where patches are left off (e.g., 1.19).
    version = "1.21.5",  # renovate: datasource=golang-version depName=golang versioning=semver-coerced
)
go_sdk.nogo(
    nogo = "//:chrome_ssh_agent_nogo",
    includes = [
        "//:__subpackages__",
    ],
)
use_repo(go_sdk, "go_sdk")

# Pull in Go dependencies
go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    # Direct dependencies only
    "com_github_google_go_cmp",
    "com_github_chromedp_chromedp",
    "com_github_chromedp_cdproto",
    "com_github_youmark_pkcs8",
    "org_golang_x_crypto",
    "org_golang_x_tools",
    "com_github_norunners_vert",
)

# Pull in NPM dependencies
npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)
npm.npm_translate_lock(
    name = "npm",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")

# Pull in typescript dependencies
rules_ts_ext = use_extension(
    "@aspect_rules_ts//ts:extensions.bzl",
    "ext",
    dev_dependency = True,
)
rules_ts_ext.deps(
    # Keep typescript version in sync with package.json
    ts_version_from = "@npm//:typescript/resolved.json",
)
use_repo(rules_ts_ext, "npm_typescript")

# Pull in Chrome for use in tests
chrome = use_extension("//build_defs/chrome:extension.bzl", "chrome")
chrome.download(
    version = "122.0.6234.0",  # renovate: datasource=custom.chrome-for-testing depName=chrome versioning=loose
)
use_repo(chrome, "chrome_chrome_linux64")
